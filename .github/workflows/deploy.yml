name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Check AWS CLI version
        run: aws --version

      - name: Configure AWS CLI
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/config
          echo "region = ${{ secrets.AWS_REGION }}" >> ~/.aws/config
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Print environment variables
        run: |
          echo "AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}"
          echo "AWS_REGION: ${{ secrets.AWS_REGION }}"
          echo "ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}"

      - name: Build and push Docker image
        run: |
          docker build -t anamnesys_api .
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker tag anamnesys_api:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Deploy to ECS
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            PROFILE="prod"
            RDS_ENDPOINT="${{ secrets.RDS_ENDPOINT_PROD }}"
            DB_USERNAME="${{ secrets.DB_USERNAME_PROD }}"
            DB_PASSWORD="${{ secrets.DB_PASSWORD_PROD }}"
          else
            PROFILE="qa"
            RDS_ENDPOINT="${{ secrets.RDS_ENDPOINT_QA }}"
            DB_USERNAME="${{ secrets.DB_USERNAME_QA }}"
            DB_PASSWORD="${{ secrets.DB_PASSWORD_QA }}"
          fi
          
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_NAME }} \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }} \
            --overrides '{
              "containerOverrides": [{
                "name": "anamnesys_api",  # Nome correto do contÃªiner
                "environment": [
                  {"name": "SPRING_DATASOURCE_URL", "value": "jdbc:mysql://'"$RDS_ENDPOINT"':3306/anamnesys"},
                  {"name": "SPRING_DATASOURCE_USERNAME", "value": "'"$DB_USERNAME"'"},
                  {"name": "SPRING_DATASOURCE_PASSWORD", "value": "'"$DB_PASSWORD"'"},
                  {"name": "SPRING_PROFILES_ACTIVE", "value": "'"$PROFILE"'"}
                ]
              }]
            }'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

