name: Deploy to ECS
on:
  push:
    branches:
      - main
    tags:
      - '*'
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy to ECS
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            PROFILE="prod"
            RDS_ENDPOINT="${{ secrets.RDS_ENDPOINT_PROD }}"
            DB_USERNAME="${{ secrets.DB_USERNAME_PROD }}"
            DB_PASSWORD="${{ secrets.DB_PASSWORD_PROD }}"
          else
            PROFILE="qa"
            RDS_ENDPOINT="${{ secrets.RDS_ENDPOINT_QA }}"
            DB_USERNAME="${{ secrets.DB_USERNAME_QA }}"
            DB_PASSWORD="${{ secrets.DB_PASSWORD_QA }}"
          fi

          OVERRIDES=$(cat <<EOF
          {
            "containerOverrides": [{
              "name": "anamnesys_api",
              "environment": [
                {"name": "SPRING_DATASOURCE_URL", "value": "jdbc:mysql://${RDS_ENDPOINT}:3306/anamnesys"},
                {"name": "SPRING_DATASOURCE_USERNAME", "value": "${DB_USERNAME}"},
                {"name": "SPRING_DATASOURCE_PASSWORD", "value": "${DB_PASSWORD}"},
                {"name": "SPRING_PROFILES_ACTIVE", "value": "${PROFILE}"}
              ]
            }]
          }
          EOF
          )

          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_NAME }} \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }} \
            --overrides "$OVERRIDES"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

